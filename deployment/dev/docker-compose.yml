services:
  file-server:
    image: elleined/go-file-server-api:${FSA_IMAGE_TAG}
    container_name: ${FSA_CONTAINER_NAME}
    environment:
      - TZ=Asia/Manila
      - PORT=:${FSA_PORT}
      - UPLOAD_ROOT_FOLDER=${UPLOAD_ROOT_FOLDER}
      - MAX_FILE_SIZE=${MAX_FILE_SIZE}
      - MAX_FILE_SIZE_TYPE=${MAX_FILE_SIZE_TYPE}
      - ALLOWED_FILE_EXTENSIONS=${ALLOWED_FILE_EXTENSIONS}
    ports:
      - "${FSA_PORT}:${FSA_PORT}"
    networks:
      - dev-network
    volumes:
      - ${FSA_BIND_MOUNT}:${UPLOAD_ROOT_FOLDER}
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    healthcheck:
      test: [ "CMD", "wget", "--spider", "http://${FSA_CONTAINER_NAME}:${FSA_PORT}"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 120s

  dev-migration:
    image: migrate/migrate
    container_name: dev-migration
    environment:
      - TZ=Asia/Manila
    networks:
      - dev-network
    volumes:
      - ${MIGRATION_SOURCE}:${MIGRATION_DESTINATION}
    entrypoint: ["migrate", "-path", "${MIGRATION_DESTINATION}", "-database", "mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@tcp(${MYSQL_CONTAINER_NAME}:${MYSQL_PORT})/${MYSQL_DATABASE}", "up"]
    depends_on:
      dev-mysql-server:
        condition: service_healthy
      dev-redis-server:
        condition: service_healthy
      file-server:
        condition: service_healthy

  dev-mysql-server:
    image: mysql:${MYSQL_IMAGE_TAG}
    container_name: ${MYSQL_CONTAINER_NAME}
    environment:
      - TZ=Asia/Manila
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - "${MYSQL_HOST_PORT}:${MYSQL_PORT}"
    networks:
      - dev-network
    volumes:
      - dev-mysql-server:/var/lib/mysql
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${MYSQL_USER}", "--password=${MYSQL_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  dev-redis-server:
    image: redis:${REDIS_IMAGE_TAG}
    container_name: ${REDIS_CONTAINER_NAME}
    environment:
      - TZ=Asia/Manila
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "${REDIS_HOST_PORT}:${REDIS_PORT}"
    networks:
      - dev-network
    volumes:
      - dev-redis-volume:/data
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "$$REDIS_PASSWORD", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

volumes:
  dev-mysql-server:
    external: false
    name: ${MYSQL_VOLUME_NAME}

  dev-redis-volume:
    external: false
    name: ${REDIS_VOLUME_NAME}

networks:
  dev-network:
    name: ${NETWORK_NAME}
    external: false
    ipam:
      driver: default